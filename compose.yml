services:
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: Y
      MSSQL_SA_PASSWORD: Abcd1234
    ports:
      - "1433:1433"
    volumes:
      - ./db-data:/var/opt/mssql/data
      - ./backend/OOTDV2.bak:/var/opt/mssql/backup/OOTDV2.bak
    networks:
      - ootd-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Abcd1234 -C -Q 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      /bin/bash -c "
      /opt/mssql/bin/sqlservr & 
      sleep 30s && 
      /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Abcd1234 -C -Q 'IF DB_ID(\"OOTDV1\") IS NULL BEGIN RESTORE DATABASE [OOTDV1] FROM DISK = \"/var/opt/mssql/backup/OOTDV2.bak\" WITH MOVE \"OOTDV1\" TO \"/var/opt/mssql/data/OOTDV1.mdf\", MOVE \"OOTDV1_log\" TO \"/var/opt/mssql/data/OOTDV1_log.ldf\" END' && 
      wait
      "

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    restart: always
    volumes:
      - dataprotection-keys:/root/.aspnet/DataProtection-Keys
    networks:
      - ootd-network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4173:4173"
    depends_on:
      database:
        condition: service_healthy
      backend:
        condition: service_started
    restart: always
    networks:
      - ootd-network

volumes:
  db-data:
  dataprotection-keys:

networks:
  ootd-network:
    driver: bridge